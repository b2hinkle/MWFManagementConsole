@*@page "/Test"
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Threading.Tasks;
@using Blazorise.DataGrid;


<DataGrid @ref="dataGrid"
          TItem="GameInstanceModel"
          ReadData="@(largeDataMode ? OnReadData : null)"
          Data="@(largeDataMode ? employeeList : dataModels)"
          TotalItems="@(largeDataMode ? totalEmployees : null)"
          EditMode="@editMode"
          Editable="@editable"
          Resizable="@resizable"
          ResizeMode="@resizableMode"
          Sortable="@sortable"
          SortMode="@sortMode"
          SelectionMode="@selectionMode"
          CommandMode="@commandsMode"
          Filterable="@filterable"
          ShowPager="@showPager"
          PagerPosition="DataGridPagerPosition.TopAndBottom"
          ShowPageSizes="@showPageSizes"
          RowInserted="@OnRowInserted"
          RowUpdated="@OnRowUpdated"
          RowRemoved="@OnRowRemoved"
          UseInternalEditing="true"
          @bind-SelectedRow="@selectedEmployee"
          @bind-SelectedRows="@selectedEmployees"
          NewItemDefaultSetter="@OnEmployeeNewItemDefaultSetter"
          DetailRowTrigger="@((item)=>item.Salaries?.Count > 0 && item.Id == selectedEmployee?.Id)"
          Striped="true"
          Bordered="true"
          Hoverable="true"
          Responsive="true"
          ValidationsSummaryLabel="Following error occurs..."
          CustomFilter="@OnCustomFilter"
          CurrentPage="currentPage"
          PageChanged="(e) => currentPage = e.Page">
    <EmptyTemplate>No records...</EmptyTemplate>
    <DataGridAggregates>
        <DataGridAggregate TItem="Employee" Field="@nameof( Employee.EMail )" Aggregate="DataGridAggregateType.Count">
            <DisplayTemplate>
                @($"Total emails: {context.Value}")
            </DisplayTemplate>
        </DataGridAggregate>
        <DataGridAggregate TItem="Employee" Field="@nameof( Employee.Salary )" Aggregate="DataGridAggregateType.Sum" DisplayFormat="{0:C}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("fr-FR")" />
        <DataGridAggregate TItem="Employee" Field="@nameof( Employee.IsActive )" Aggregate="DataGridAggregateType.TrueCount" />
    </DataGridAggregates>
    <DataGridColumns>
        <DataGridMultiSelectColumn TItem="Employee" Width="30px">
            <FilterTemplate>
                <Button Clicked="@Reload" title="Reload">
                    <Icon Name="IconName.Sync" />
                </Button>
            </FilterTemplate>
            <MultiSelectTemplate>
                <Label @onclick:stopPropagation>
                    <Check TValue="bool" Checked="@context.IsSelected" Indeterminate="@context.IsIndeterminate" CheckedChanged="@context.SelectedChanged" @onclick:stopPropagation></Check>
                </Label>
            </MultiSelectTemplate>
        </DataGridMultiSelectColumn>
        <DataGridCommandColumn TItem="Employee" Width="170px">
            <NewCommandTemplate>
                <Button Color="Color.Success" Clicked="@context.Clicked">@context.LocalizationString</Button>
            </NewCommandTemplate>
            <EditCommandTemplate>
                <Button Color="Color.Primary" Clicked="@context.Clicked">@context.LocalizationString</Button>
            </EditCommandTemplate>
            <SaveCommandTemplate>
                <Button Color="Color.Primary" Clicked="@context.Clicked">@context.LocalizationString</Button>
            </SaveCommandTemplate>
            <DeleteCommandTemplate>
                <Button Color="Color.Danger" Clicked="@context.Clicked">@context.LocalizationString</Button>
            </DeleteCommandTemplate>
            <CancelCommandTemplate>
                <Button Color="Color.Secondary" Clicked="@context.Clicked">@context.LocalizationString</Button>
            </CancelCommandTemplate>
            <ClearFilterCommandTemplate>
                <Button Color="Color.Warning" Clicked="@context.Clicked">@context.LocalizationString</Button>
            </ClearFilterCommandTemplate>
        </DataGridCommandColumn>
        <DataGridColumn TextAlignment="TextAlignment.Center" TItem="Employee" Field="@nameof( Employee.Id )" Caption="#" Sortable="false" Width="60px" />
        <DataGridColumn TItem="Employee" Field="@nameof( Employee.FirstName )" Caption="First Name" Validator="@CheckFirstName" Editable="true">
            <FilterTemplate>
                <TextEdit Placeholder="Search name" Text="@context.SearchValue" TextChanged="@(v=> context.TriggerFilterChange(v))" />
            </FilterTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="Employee" Field="@nameof( Employee.LastName )" Caption="Last Name" Editable="true" ValidationPattern="[A-Za-z]{3}" />
        <DataGridColumn TItem="Employee" Field="@nameof( Employee.EMail )" Caption="EMail" Validator="CheckEMail" Editable="true" PopupFieldColumnSize="ColumnSize.IsFull.OnDesktop" />
        <DataGridColumn TItem="Employee" Field="@nameof( Employee.City )" Caption="City" Editable="true">
            <CaptionTemplate>
                <Icon Name="IconName.City" /> @context.Caption
            </CaptionTemplate>
            <FilterTemplate>
                @{
                    var selectedValue = @context.SearchValue ?? "*";
                    <Select TValue="string" SelectedValue="@selectedValue" SelectedValueChanged="@(e => context.TriggerFilterChange(e == "*" ? "" : e.ToString()))">
                        <SelectItem Value="@("*")">All</SelectItem>
                        @foreach (var item in dataModels)
                        {
                            <SelectItem Value="@item.City">@item.City</SelectItem>
                        }
                    </Select>
                }
            </FilterTemplate>
        </DataGridColumn>
        <DataGridColumn TItem="Employee" Field="@nameof( Employee.Zip )" Caption="Zip" Editable="true">
            <SortDirectionTemplate>
                <Icon Name="@( context == SortDirection.Descending ? IconName.ArrowDown : IconName.ArrowUp )" />
            </SortDirectionTemplate>
        </DataGridColumn>
        <DataGridDateColumn TItem="Employee" Field="@nameof( Employee.DateOfBirth )" DisplayFormat="{0:dd.MM.yyyy}" Caption="Date Of Birth" Editable="true" />
        <DataGridNumericColumn TItem="Employee" Field="@nameof( Employee.Childrens )" Caption="Childrens" Editable="true" Filterable="false" />
        <DataGridSelectColumn TItem="Employee" Field="@nameof( Employee.Gender )" Caption="Gender" Editable="true">
            <DisplayTemplate>
                @{
                    var gender = (context as Employee)?.Gender;

                    @if (gender == "M")
                    {
                        @("Male")
                    }
                    else if (gender == "F")
                    {
                        @("Female")
                    }
                    else if (gender == "D")
                    {
                        @("Diverse")
                    }
                }
            </DisplayTemplate>
            <EditTemplate>
                <Select TValue="string" SelectedValue="@((string)( context.CellValue ))" SelectedValueChanged="@(( v ) => context.CellValue = v)">
                    <SelectItem TValue="string" Value="null"></SelectItem>
                    <SelectItem TValue="string" Value="@("M")">Male</SelectItem>
                    <SelectItem TValue="string" Value="@("F")">Female</SelectItem>
                    <SelectItem TValue="string" Value="@("D")">Diverse</SelectItem>
                </Select>
            </EditTemplate>
        </DataGridSelectColumn>
        <DataGridColumn TItem="Employee" Field="@nameof( Employee.Salary )" Caption="Salary" Editable="true" Width="140px" DisplayFormat="{0:C}" DisplayFormatProvider="@System.Globalization.CultureInfo.GetCultureInfo("fr-FR")" TextAlignment="TextAlignment.Right">
            <EditTemplate>
                <NumericEdit TValue="decimal" Value="@((decimal)( context.CellValue ))" ValueChanged="@(( v ) => context.CellValue = v)" />
            </EditTemplate>
        </DataGridColumn>
        <DataGridCheckColumn TItem="Employee" Field="@nameof(Employee.IsActive)" Caption="Active" Editable="true" Filterable="false">
            <DisplayTemplate>
                <Check TValue="bool" Checked="context.IsActive" Disabled="true" ReadOnly="true" />
            </DisplayTemplate>
        </DataGridCheckColumn>
    </DataGridColumns>
    <DetailRowTemplate>
        @{
            var salaries = (context as Employee).Salaries;

            <DataGrid TItem="Salary"
                      Data="salaries"
                      Sortable="false"
                      ShowCaptions="false">
                <DataGridCommandColumn TItem="Salary" />
                <DataGridDateColumn TItem="Salary" Field="@nameof(Salary.Date)" Caption="Date" />
                <DataGridNumericColumn TItem="Salary" Field="@nameof(Salary.Total)" Caption="Total" />
            </DataGrid>
        }
    </DetailRowTemplate>
    <PopupTitleTemplate>
        @if (context.EditState == DataGridEditState.Edit)
        {
            @($"{context.LocalizationString} Employee {context.Item.FirstName} {context.Item.LastName}")
        }
        else
        {
            @($"{context.LocalizationString} Employee")
        }
    </PopupTitleTemplate>
    <EmptyCellTemplate>
        <Text Style="opacity: .5;">--</Text>
    </EmptyCellTemplate>
    <ButtonRowTemplate>
        @if (showButtonRow)
        {
            <Button Color="Color.Success" Clicked="@context.NewCommand.Clicked">@context.NewCommand.LocalizationString</Button>
            <Button Color="Color.Primary" Clicked="@context.EditCommand.Clicked" Disabled="@(selectedEmployee is null)">@context.EditCommand.LocalizationString</Button>
            <Button Color="Color.Danger" Clicked="@context.DeleteCommand.Clicked" Disabled="@(selectedEmployee is null)">@context.DeleteCommand.LocalizationString</Button>
            <Button Color="Color.Warning" Clicked="@context.ClearFilterCommand.Clicked">@context.ClearFilterCommand.LocalizationString</Button>
        }
    </ButtonRowTemplate>
</DataGrid>



@code
{

}
*@